name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

env:
  PYTHON_VERSION: "3.11"

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install semantic-release
        run: |
          npm install -g \
            semantic-release@23 \
            @semantic-release/changelog@6 \
            @semantic-release/commit-analyzer@12 \
            @semantic-release/release-notes-generator@13 \
            @semantic-release/github@10 \
            @semantic-release/git@10 \
            @semantic-release/exec@6 \
            conventional-changelog-conventionalcommits@7

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: github-actions[bot]
          GIT_AUTHOR_EMAIL: github-actions[bot]@users.noreply.github.com
          GIT_COMMITTER_NAME: github-actions[bot]
          GIT_COMMITTER_EMAIL: github-actions[bot]@users.noreply.github.com
        run: npx semantic-release

      - name: Build packages (if released)
        if: steps.release.outputs.new-release-published == 'true'
        run: |
          ./build.sh
          ./build.sh cython

      - name: Upload release artifacts
        if: steps.release.outputs.new-release-published == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: release-packages
          path: dist/*
