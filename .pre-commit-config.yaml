# Pre-commit hooks for code quality and consistency
# See https://pre-commit.com for more information

repos:
  # Ruff - Fast Python linter and formatter (replaces black, isort, flake8, and more)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.8.4
    hooks:
      # Run the linter
      - id: ruff
        args: [--fix]
        types_or: [python, pyi]
      # Run the formatter
      - id: ruff-format
        types_or: [python, pyi]

  # Python code security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.10
    hooks:
      - id: bandit
        args: [-c, pyproject.toml]
        additional_dependencies: ["bandit[toml]"]

  # Type checking with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.13.0
    hooks:
      - id: mypy
        additional_dependencies:
          - fastapi>=0.115.0
          - pydantic>=2.9.0
          - types-setuptools
        args: [--strict, --ignore-missing-imports]
        exclude: ^(.*/)setup\.py$|^examples/

  # Basic file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      # File formatting
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: mixed-line-ending
        args: [--fix=lf]

      # YAML/JSON/TOML validation
      - id: check-yaml
      - id: check-toml
      - id: check-json

      # Python specific
      - id: check-ast
      - id: check-docstring-first
        exclude: ^setup\.py$
      - id: debug-statements
      - id: name-tests-test
        args: [--pytest-test-first]

      # General checks
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: detect-private-key

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
        args: [--severity=warning]

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.43.0
    hooks:
      - id: markdownlint
        args: [--fix]

  # Commit message linting (conventional commits)
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.6.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]

# Global settings
default_language_version:
  python: python3.11

ci:
  autofix_commit_msg: "ci: auto fixes from pre-commit hooks"
  autofix_prs: true
  autoupdate_commit_msg: "ci: pre-commit autoupdate"
